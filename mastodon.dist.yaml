---
apiVersion: v1
kind: Namespace
metadata:
  name: mastodon-server

---
apiVersion: v1
kind: Service
metadata:
  name: mastodon
  namespace: mastodon-server
spec:
  selector:
    app: mastodon
  ports:   
    - name: mastodon-plain
      protocol: TCP
      port: 80
    - name: mastodon-secure
      protocol: TCP
      port: 443

---
apiVersion: v1
kind: Secret
metadata:
  namespace: mastodon-server
  name: mastodon-secret
type: Opaque
stringData:
  SECRET_KEY_BASE: <CHANGE-ME>
  OTP_SECRET: <CHANGE-ME>
  VAPID_PRIVATE_KEY: <CHANGE-ME>
  VAPID_PUBLIC_KEY: <CHANGE-ME>    
  SMTP_LOGIN: <CHANGE-ME>
  SMTP_PASSWORD: <CHANGE-ME>
  SMTP_FROM_ADDRESS: <CHANGE-ME>
  AWS_ACCESS_KEY_ID: <CHANGE-ME>
  AWS_SECRET_ACCESS_KEY: <CHANGE-ME>
  S3_ENDPOINT: <CHANGE-ME>
  SMTP_FROM_ADDRESS: <CHANGE-ME>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon
  namespace: mastodon-server
  labels:
    app: mastodon 
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mastodon
  template:
    metadata:
      labels:
        app: mastodon
        name: mastodon
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: mastodon
      containers:
      - name: mastodon
        image: lscr.io/linuxserver/mastodon:latest
        imagePullPolicy: Always
        ports:
          - name: plain
            containerPort: 80
          - name: secure
            containerPort: 443                        
        env:
          - name: PUID
            value: "1000"
          - name: GUID
            value: "1000"
          - name: TZ
            value: Europe/Istanbul
          - name: LOCAL_DOMAIN
            value: <CHANGE-ME>   # domain.com
          - name: WEB_DOMAIN
            value: <CHANGE-ME>   # domain.com         
          - name: REDIS_HOST
            value: redis.redis-server
          - name: REDIS_PORT
            value: "6379"
          - name: DB_NAME
            value: mastodon
          - name: DB_HOST
            value: postgres.postgres-server
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: db_secrets
                key: POSTGRES_NON_ROOT_USER
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: db_secrets
                key: POSTGRES_NON_ROOT_PASSWORD
          - name: DB_PORT
            value: "5432"
          - name: ES_ENABLED
            value: "false"
          - name: SECRET_KEY_BASE
            valueFrom:
              secretKeyRef:
                name: secrets
                key: SECRET_KEY_BASE
          - name: OTP_SECRET
            valueFrom:
              secretKeyRef:
                name: secrets
                key: OTP_SECRET
          - name: VAPID_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                name: secrets
                key: VAPID_PRIVATE_KEY
          - name: VAPID_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: secrets
                key: VAPID_PUBLIC_KEY
          - name: RAILS_SERVE_STATIC_FILES
            value: "false"
          - name: SMTP_SERVER
            valueFrom:
              secretKeyRef:
                name: secrets
                key: SMTP_SERVER
          - name: SMTP_PORT
            value: "587" # change this one accordenly
          - name: SMTP_LOGIN
            valueFrom:
              secretKeyRef:
                name: secrets
                key: SMTP_LOGIN
          - name: SMTP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secrets
                key: SMTP_PASSWORD
          - name: SMTP_FROM_ADDRESS
            valueFrom:
              secretKeyRef:
                name: secrets
                key: SMTP_FROM_ADDRESS
          - name: S3_ENABLED
            value: "true"
          - name: CDN_HOST
            value: <CHANGE-ME>
          - name: S3_BUCKET
            value: "mastodon"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: secrets
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: secrets
                key: AWS_SECRET_ACCESS_KEY
          - name: S3_REGION
            value: auto  
          - name: S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: secrets
                key: S3_ENDPOINT
          - name: S3_HOSTNAME
            value: <CHANGE-ME> # assets.domain.com
          - name: S3_FORCE_SINGLE_REQUEST
            value: "true"
          - name: S3_READ_TIMEOUT
            value: "15"
          - name: S3_OPEN_TIMEOUT
            value: "15"
        resources:
          limits:
            cpu: "1.0"
            memory: "2560Mi"
          requests:
            cpu: "0.5"
            memory: "2560Mi"      
      volumes:
        - name: db_secrets
          secret:
            secretName: postgres-secret
        - name: secrets
          secret:
            secretName: mastodon-secret
